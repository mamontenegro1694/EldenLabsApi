// <auto-generated />
using System;
using EldenLabsApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EldenLabsApi.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221217162530_AddKeyToMeasurement")]
    partial class AddKeyToMeasurement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EldenLabsApi.Database.Entities.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConnectionDeviceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Device")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EventProcessedUtcTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HefestoId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Plugin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.Property<string>("VarName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VarName1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("EldenLabsApi.Database.Entities.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Email = "eldenlabs@celsia.com",
                            Password = "$2a$11$RxAO41L74srOXnBTMELpE./6soNrNUyJ6zOYadnZWQ0gP95sNPpLi"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
